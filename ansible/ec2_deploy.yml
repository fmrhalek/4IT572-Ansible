- name: Deploy to EC2
  hosts: localhost
  connection: local

  tasks:
    - name: Terminate every running instance
      ec2_instance:
        region: us-east-1
        state: absent
        filters:
          instance-state-name: running
          "tag:Name": "myapp"
        aws_access_key: "{{ access_key }}"
        aws_secret_key: "{{ secret_key }}"
        security_token: "{{ session_token }}"

    - name: Launch EC2 instance
      ec2_instance:
        name: "myapp"
        instance_type: t2.medium
        image_id: ami-0230bd60aa48260c6
        region: us-east-1
        key_name: test
        vpc_subnet_id: subnet-089f1d2b912d5ed16
        network:
            assign_public_ip: yes
        wait: yes
        count: 1
        security_group: myapp
#        tags:
#          Name: myapp
        aws_access_key: "{{ access_key }}"
        aws_secret_key: "{{ secret_key }}"
        security_token: "{{ session_token }}"
      register: ec2_instance_result

    - name: Add instance host to group
      add_host:
        hostname: "{{ item.public_ip_address }}"
        groupname: launched
      loop: "{{ ec2_instance_result.instances }}"

    - name: Wait for SSH connection
      delegate_to: "{{ item.public_dns_name }}"
      wait_for_connection:
        delay: 60
        timeout: 600
      loop: "{{ ec2_instance_result.instances }}"

    - name: Add EC2 instances as known hosts
      shell: ssh-keyscan -H {{ item.public_ip_address }} >> ~/.ssh/known_hosts
      with_items: "{{ ec2_instance_result.instances }}"

    - name: Add instances to load balancer target group
      elb_target:
        target_group_name: eshop
        target_id: "{{ item.instance_id }}"
        target_port: 80
        state: present
        region: us-east-1
        aws_access_key: "{{ access_key }}"
        aws_secret_key: "{{ secret_key }}"
        security_token: "{{ session_token }}"
      with_items: "{{ ec2_instance_result.instances }}"

- name: Configure EC2
  hosts: launched
  connection: ssh

  tasks:
    - name: Install Git and Docker
      yum:
        name:
          - docker
          - git
        state: latest
        update_cache: yes
      become: yes
    - service:
        name: docker
        state: started
        enabled: yes
      become: yes
    - name: Start Docker on startup
      shell: systemctl enable docker
      become: yes
    - name: Set rights to docker
      shell: usermod -a -G docker ec2-user
      become: yes
    - name: Get project files from git
      git:
        repo: 'https://github.com/fmrhalek/4IT572.git'
        dest: ./app
    - name: Build docker with eshop
      shell: cd app && docker build -t myapp:latest .
      become: yes
    - name: Run Docker with eshop
      shell: docker run -p 80:3000 myapp
      async: 45
      poll: 0
      become: yes
    - wait_for:
        port:
          80
